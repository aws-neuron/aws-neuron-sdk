
.. dropdown::  Neural-networks training support
      :class-title: drop-down-class-title-small
      :class-body: drop-down-class-body-small
      :animate: fade-in
      :open:

      * Supported instances: Trn1
      * Supported Frameworks: PyTorch Neuron (torch-neuronx)
      * Supported Data-types

        * FP32, BF16
  
      * Supported Rounding Modes

        * Stochastic Rounding (SR)
        * Round Nearest ties to Even (RNE) 

      * Supported Automatic Casting Methods
      
        * Neuron automatic casting of FP32 tensors / weights / operations to BF16 - Default mode
        * PyTorch automatic casting
        * Full BF16 automatic casting (via XLA_USE_BF16=1 environment variable)

.. dropdown::  PyTorch Neuron (``torch-neuronx``)
      :class-title: drop-down-class-title-small
      :class-body: drop-down-class-body-small
      :animate: fade-in
      :open:

      * PyTorch 1.11
      * Supported instances: Trn1
      * Supported Python versions: Python 3.7, Python 3.8
      * Eager Debug Mode
      * Persistent Cache for compilation
      * Collective compute operations: AllReduce
      * Optimizers: AdamW, SGD
      * Tested loss functions: Negative log-likelihood (NLL), Cross-entropy
      * Training Libraries/Frameworks

        * torch.distributed
        * Megatron-LM Reference for Neuron

        * Training Examples

          * :ref:`neuronx-mlp-training-tutorial`
          * :ref:`hf-bert-pretraining-tutorial`
          * :ref:`torch-hf-bert-finetune`
          * :ref:`megatron-lm-pretraining-tutorial`

      * For More information:


        * :ref:`pytorch-neuronx-main`
        * :ref:`pytorch-neuronx-programming-guide`
        * :ref:`torch-neuronx-rn`
        * :ref:`pytorch-neuron-traning-troubleshooting`

.. dropdown::  Neuron Runtime, Drivers and Networking Components
      :class-title: drop-down-class-title-small
      :class-body: drop-down-class-body-small
      :animate: fade-in
      :open:


      * Neuron Runtime 2.9
      * Supported instances: Trn1, Inf1
      * Elastic Fabric Adapter (EFA) @ 800Gbps
      * Collective communication operators

        * AllReduce
        * AllGather
        * ReduceScatter

      * Release Notes:

        * :ref:`neuron-runtime-rn`     
        * :ref:`neuron-driver-release-notes`


.. dropdown::  Neuron Tools
      :class-title: drop-down-class-title-small
      :class-body: drop-down-class-body-small
      :animate: fade-in
      :open:

      * Neuron system tools - Adding Trn1 support to the following tools:

        * neuron-monitor
        * neuron-top
        * neuron-ls

      * Release Notes:
      
        * :ref:`neuron-tools-rn`     

.. dropdown::  Developer Flows
      :class-title: drop-down-class-title-small
      :class-body: drop-down-class-body-small
      :animate: fade-in
      :open:

      * Containers

        * Deep Learning Containers (DLC) supporting PyTorch Neuron (``torch-neuronx``)

      * Multi-Instance distributed workloads orchestration:

        * AWS ParallelCluster (Through custom AMI build)
        * Amazon Elastic Compute Cloud (ECS)
  
      * Supported Amazon Linux Images (AMIs)

        * Ubuntu 20 Neuron DLAMI-base (Python 3.8)
        * Amazon Linux2 Neuron DLAMI-base (Python 3.7)
        * Ubuntu 18 Neuron DLAMI-base (Python 3.7)
        * Ubuntu 18 AMI (Python 3.7)
        * Ubuntu 20 AMI (Python 3.8)
        * Amazon Linux2 AMI (Python 3.7)



